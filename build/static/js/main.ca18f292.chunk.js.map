{"version":3,"sources":["components/select/item.jsx","components/select/items.jsx","components/select/input.jsx","components/select/select.jsx","index.js"],"names":["Item","value","this","props","itemClassName","inputValue","indexOf","name","className","style","itemStyle","onClick","selectItem","undefined","icon","src","process","alt","React","Component","Items","items","isFiltered","mask","split","pop","filter","listClassName","isActive","listStyle","map","index","key","multiple","Input","showList","placeholder","inputIsEmpty","clearInput","wrapperClassName","labelClassName","length","inputStyle","type","autoComplete","onChange","handleChange","readOnly","Select","handleClickOutside","event","domNode","ReactDOM","findDOMNode","contains","target","setState","state","selectedItems","isLoaded","modalIsOpen","bind","toOpenModal","ModalRender","toCloseModal","listToObject","elem","containerStyle","modal","buttonText","modalButtonText","modalClassName","list","forEach","item","i","isRepeat","replace","document","addEventListener","listItems","url","fetch","then","response","json","data","catch","err","console","log","removeEventListener","render","fontSize","backgroundColor","border","color","getElementById"],"mappings":"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","file":"static/js/main.ca18f292.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Item extends React.Component {\r\n\r\n    render() {\r\n        const { value } = this.props\r\n        const itemClassName = this.props.inputValue.indexOf(value.name) !== -1 ? 'list-item list-item_selected' : 'list-item'\r\n        return (\r\n            <div className={itemClassName} style={this.props.itemStyle} onClick={() => this.props.selectItem(value.name)}>\r\n                <span className='list-item__text'>{value.name}</span>\r\n                {value.icon !== undefined &&\r\n                    <img className='list-item__icon' src={`${process.env.PUBLIC_URL}/img/${value.icon}`} alt={value.name} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Item","import React from 'react'\r\nimport Item from './item'\r\n\r\nclass Items extends React.Component {\r\n    render() {\r\n        let items\r\n        switch (this.props.isFiltered) {\r\n            case true:\r\n                const mask = this.props.inputValue.split(' ').pop();\r\n                items = this.props.items.filter(value => {\r\n                    if (value.name.indexOf(mask) !== -1) return true\r\n                })\r\n                break;\r\n        \r\n            default:\r\n                items = this.props.items\r\n                break;\r\n        }\r\n        const listClassName = this.props.isActive ? 'select__list select__list_display' : 'select__list'\r\n        \r\n        return (\r\n            <div className={listClassName} style={this.props.listStyle}>\r\n                {items.map((value, index) => (\r\n                    <Item \r\n                        inputValue={this.props.inputValue}\r\n                        key={index}\r\n                        selectItem={this.props.selectItem}\r\n                        value={value}\r\n                        multiple={this.props.multiple}\r\n                        itemStyle={this.props.itemStyle}\r\n                         />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Items","import React from 'react'\r\n\r\nclass Input extends React.Component {\r\n\r\n    render() {\r\n\r\n        const { showList, placeholder, inputIsEmpty, clearInput } = this.props\r\n        const wrapperClassName = this.props.isActive ? 'input__wrapper input__wrapper_focus' : 'input__wrapper'\r\n        const labelClassName = this.props.inputValue.length !== 0 ? 'select__label-text select__label-text_small' : 'select__label-text'\r\n\r\n        return (       \r\n            <div className={wrapperClassName} style={this.props.inputStyle} onClick={() => showList()}>\r\n                <input \r\n                    type=\"text\" \r\n                    className='select__input' \r\n                    value={this.props.inputValue}  \r\n                    autoComplete='no'\r\n                    onChange={this.props.handleChange}\r\n                    readOnly={!this.props.isFiltered}\r\n                    />\r\n                {!inputIsEmpty && \r\n                    <img className='input__close' onClick={() => clearInput()} src={`${process.env.PUBLIC_URL}/img/close.png`} alt='Очистить'/>\r\n                }\r\n                <div className={labelClassName}>{placeholder}</div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './style.css'\r\nimport Items from './items'\r\nimport Input from './input'\r\n\r\nclass Select extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isActive: false,\r\n            inputIsEmpty: true,\r\n            selectedItems: [],\r\n            items: undefined,\r\n            inputValue: '',\r\n            isLoaded: false,\r\n            modalIsOpen: false\r\n        }\r\n        this.showList = this.showList.bind(this)\r\n        this.selectItem = this.selectItem.bind(this)\r\n        this.clearInput = this.clearInput.bind(this)\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.toOpenModal = this.toOpenModal.bind(this);\r\n        this.ModalRender = this.ModalRender.bind(this);\r\n        this.toCloseModal = this.toCloseModal.bind(this);\r\n    }\r\n\r\n    render() {\r\n        this.listToObject()\r\n        let elem =\r\n            <div className='select__container' style={this.props.containerStyle}>\r\n                <Input\r\n                    showList={this.showList}\r\n                    isActive={this.state.isActive}\r\n                    placeholder={this.props.placeholder}\r\n                    inputIsEmpty={this.state.inputIsEmpty}\r\n                    clearInput={this.clearInput}\r\n                    inputValue={this.state.inputValue}\r\n                    handleChange={this.handleChange}\r\n                    isFiltered={this.props.isFiltered}\r\n                    inputStyle={this.props.inputStyle}\r\n                />\r\n                {this.state.isLoaded &&\r\n                    <Items\r\n                        isActive={this.state.isActive}\r\n                        multiple={this.props.multiple}\r\n                        items={this.state.items}\r\n                        selectItem={this.selectItem}\r\n                        inputValue={this.state.inputValue}\r\n                        isFiltered={this.props.isFiltered}\r\n                        listStyle={this.props.listStyle}\r\n                        itemStyle={this.props.itemStyle}\r\n                    />}\r\n            </div>\r\n        this.props.modal && (elem = this.ModalRender(elem))\r\n        return (\r\n            <div>\r\n                {elem}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    toOpenModal() {\r\n        this.setState({ modalIsOpen: true })\r\n    }\r\n\r\n    toCloseModal() {\r\n        this.setState({ modalIsOpen: false })\r\n    }\r\n\r\n    ModalRender(elem) {\r\n        const buttonText = this.props.modalButtonText !== undefined ? this.props.modalButtonText : 'Выберите'\r\n        const modalClassName = this.state.modalIsOpen ? 'modal modal_opened' : 'modal'\r\n                return (\r\n                    <div>\r\n                        <button onClick={this.toOpenModal} className='modal-open'>{buttonText}</button>\r\n                        <div className={modalClassName}>\r\n                            <div className=\"modal-wrapper\">\r\n                                <div className=\"CSS-modal-inner\">\r\n                                    <div className=\"modal-header\">\r\n                                        <span className='modal-headtext'>Выберите</span>\r\n                                        <span onClick={this.toCloseModal} className='modal-control'>✕</span>\r\n                                    </div>\r\n                                    <div className=\"modal-content\">\r\n                                        {elem}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            inputValue: event.target.value,\r\n            inputIsEmpty: false,\r\n            isActive: true\r\n        })\r\n    }\r\n\r\n    listToObject() {\r\n        const list = this.props.list\r\n        if (list !== undefined) {\r\n            let items = []\r\n            list.forEach((item, i) => {\r\n                items[i] = {\r\n                    name: item\r\n                }\r\n            })\r\n            return items;\r\n        } else return false\r\n    }\r\n\r\n    selectItem(value) {\r\n\r\n        let inputValue = this.state.inputValue\r\n        const isRepeat = inputValue.indexOf(value) !== -1\r\n        switch (this.props.multiple) {\r\n            case true:\r\n                inputValue = isRepeat ?\r\n                    inputValue.replace(` ${value},`, '')\r\n                    :\r\n                    `${this.state.inputValue} ${value},`\r\n                this.setState({\r\n                    inputValue: inputValue,\r\n                    inputIsEmpty: false\r\n                })\r\n                break;\r\n            default:\r\n                inputValue = isRepeat ?\r\n                    '' : value\r\n                this.setState({\r\n                    inputValue,\r\n                    inputIsEmpty: false,\r\n                    isActive: false\r\n                })\r\n                break;\r\n        }\r\n    }\r\n\r\n    clearInput() {\r\n        this.setState(() => ({\r\n            inputValue: '',\r\n            inputIsEmpty: true\r\n        }))\r\n    }\r\n\r\n    showList() {\r\n        this.setState(state => ({\r\n            isActive: !state.isActive\r\n        }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('click', this.handleClickOutside, true);\r\n        const listItems = this.listToObject();\r\n        if (this.props.url !== undefined) {\r\n            fetch(this.props.url)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    const { items } = data\r\n                    this.setState({\r\n                        items,\r\n                        isLoaded: true\r\n                    })\r\n                })\r\n                .catch(err => console.log('Данные по URL не получены. Ошибка: ', err))\r\n        } else if (listItems) {\r\n            this.setState({ items: listItems, isLoaded: true })\r\n        } else if (this.props.items !== undefined) {\r\n            this.setState({ items: this.props.items, isLoaded: true })\r\n        } else console.log('Данные не получены!');\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleClickOutside, true);\r\n    }\r\n\r\n    handleClickOutside = event => {\r\n        const domNode = ReactDOM.findDOMNode(this);\r\n\r\n        if (!domNode || !domNode.contains(event.target)) {\r\n            this.setState({\r\n                isActive: false\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default Select","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport Select from './components/select/select.jsx'\r\nimport {items} from './countries.json'\r\n\r\nrender(\r\n    <div className=\"wrapper\">\r\n        <h2><span className='white'>React Select компонент</span></h2>\r\n        <p>Базовые возможности: <br />\r\n            - указание <span className='white'>placeholder</span> (в данном случае 'Имя')<br />\r\n            - передача <span className='white'>list</span> (массив строчных элементов)</p>\r\n        <Select \r\n            placeholder='Имя'\r\n            list={['Ваня','Петя','Саша','Андрей']}\r\n            />\r\n        <p>Мультивыбор подключается добавлением атрибута <span className='white'>multiple</span>. Данные получены при помощи <span className='white'>import</span></p>\r\n        <Select\r\n            placeholder={'Страна'}\r\n            multiple\r\n            items={items}\r\n            />\r\n        <p>Фильтрация текста подключается с помощью атрибута <span className='white'>isFiltered</span>. Список получен с помощью <span className='white'>.fetch()</span></p>\r\n        <Select \r\n            placeholder='Операционная система'\r\n            url={`${process.env.PUBLIC_URL}/json/os.json`}\r\n            isFiltered\r\n            />\r\n        <p>Возможность открытия в модальном окне устанавливается с помощью атрибута <span className='white'>modal</span>. Текст кнопки содержится в атрибуте <span className='white'>modalButtonText</span> (По умолчанию 'Выберите')</p>\r\n        <Select \r\n            placeholder='Город'\r\n            url={`${process.env.PUBLIC_URL}/json/cities.json`}\r\n            modal\r\n            isFiltered\r\n            modalButtonText='Выбрать город'\r\n            />\r\n        <p>Передача кастомизированных стилей осуществляется через <span className='white'>containerStyle</span>, <span className='white'>inputStyle</span>, <span className='white'>listStyle</span>, <span className='white'>itemStyle</span>, например:<br />\r\n        <span className='white'>containerStyle=&#123;&#123;fontSize: '15px'&#125;&#125;</span></p>\r\n        <Select \r\n            containerStyle={{fontSize: '15px'}}\r\n            inputStyle={{\r\n                backgroundColor: '#1d1f20',\r\n                border: '1px solid white',\r\n                color: '#fff',\r\n            }}\r\n            placeholder='Операционная система'\r\n            url={`${process.env.PUBLIC_URL}/json/os.json`}\r\n            />\r\n    </div>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}