{"version":3,"sources":["components/select/item.jsx","components/select/items.jsx","components/select/input.jsx","components/select/select.jsx","index.js"],"names":["Item","value","this","props","itemClassName","inputValue","indexOf","name","className","onClick","selectItem","undefined","icon","src","process","alt","React","Component","Items","items","isFiltered","mask","split","pop","filter","listClassName","isActive","map","index","key","multiple","Input","showList","placeholder","inputIsEmpty","clearInput","wrapperClassName","labelClassName","length","type","autoComplete","onChange","handleChange","readOnly","Select","handleClickOutside","event","domNode","ReactDOM","findDOMNode","contains","target","setState","state","selectedItems","isLoaded","bind","listToObject","list","forEach","item","i","isRepeat","replace","document","addEventListener","listItems","url","fetch","then","response","json","data","console","log","removeEventListener","render","getElementById"],"mappings":"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","file":"static/js/main.d56f8788.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Item extends React.Component {\r\n\r\n    render() {\r\n        const { value } = this.props\r\n        const itemClassName = this.props.inputValue.indexOf(value.name) !== -1 ? 'list-item list-item_selected' : 'list-item'\r\n        return (\r\n            <div className={itemClassName}  onClick={() => this.props.selectItem(value.name)}>\r\n                <span className='list-item__text'>{value.name}</span>\r\n                {value.icon !== undefined &&\r\n                    <img className='list-item__icon' src={`${process.env.PUBLIC_URL}/img/${value.icon}`} alt={value.name} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Item","import React from 'react'\r\nimport Item from './item'\r\n\r\nclass Items extends React.Component {\r\n    render() {\r\n        let items\r\n        switch (this.props.isFiltered) {\r\n            case true:\r\n                const mask = this.props.inputValue.split(' ').pop();\r\n                items = this.props.items.filter(value => {\r\n                    if (value.name.indexOf(mask) !== -1) return true\r\n                })\r\n                break;\r\n        \r\n            default:\r\n                items = this.props.items\r\n                break;\r\n        }\r\n        const listClassName = this.props.isActive ? 'select__list select__list_display' : 'select__list'\r\n        \r\n        return (\r\n            <div className={listClassName}>\r\n                {items.map((value, index) => (\r\n                    <Item \r\n                        inputValue={this.props.inputValue}\r\n                        key={index}\r\n                        selectItem={this.props.selectItem}\r\n                        value={value}\r\n                        multiple={this.props.multiple}\r\n                         />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Items","import React from 'react'\r\n\r\nclass Input extends React.Component {\r\n\r\n    render() {\r\n\r\n        const { showList, placeholder, inputIsEmpty, clearInput } = this.props\r\n        const wrapperClassName = this.props.isActive ? 'input__wrapper input__wrapper_focus' : 'input__wrapper'\r\n        const labelClassName = this.props.inputValue.length !== 0 ? 'select__label-text select__label-text_small' : 'select__label-text'\r\n\r\n        return (       \r\n            <div className={wrapperClassName} onClick={() => showList()}>\r\n                <input \r\n                    type=\"text\" \r\n                    className='select__input' \r\n                    value={this.props.inputValue}  \r\n                    autoComplete='no'\r\n                    onChange={this.props.handleChange}\r\n                    readOnly={!this.props.isFiltered}\r\n                    />\r\n                {!inputIsEmpty && \r\n                    <img className='input__close' onClick={() => clearInput()} src={`${process.env.PUBLIC_URL}/img/close.png`} alt='Очистить'/>\r\n                }\r\n                <div className={labelClassName}>{placeholder}</div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './style.css'\r\nimport Items from './items'\r\nimport Input from './input'\r\n\r\nclass Select extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isActive: false,\r\n            inputIsEmpty: true,\r\n            selectedItems: [],\r\n            items: undefined,\r\n            inputValue: '',\r\n            isLoaded: false\r\n        }\r\n        this.showList = this.showList.bind(this)\r\n        this.selectItem = this.selectItem.bind(this)\r\n        this.clearInput = this.clearInput.bind(this)\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    render() {\r\n\r\n        this.listToObject()\r\n        return (\r\n            <div className='select__container'>\r\n                <Input \r\n                    showList={this.showList} \r\n                    isActive={this.state.isActive} \r\n                    placeholder={this.props.placeholder}\r\n                    inputIsEmpty={this.state.inputIsEmpty}\r\n                    clearInput={this.clearInput}\r\n                    inputValue={this.state.inputValue}\r\n                    handleChange={this.handleChange}\r\n                    isFiltered={this.props.isFiltered}\r\n                    />\r\n                {this.state.isLoaded && \r\n                    <Items \r\n                    isActive={this.state.isActive}\r\n                    multiple={this.props.multiple}\r\n                    items={this.state.items} \r\n                    selectItem={this.selectItem}\r\n                    inputValue={this.state.inputValue}\r\n                    isFiltered={this.props.isFiltered}\r\n                    />}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            inputValue: event.target.value,\r\n            inputIsEmpty: false\r\n        })\r\n    }\r\n\r\n    listToObject() {\r\n        const list = this.props.list\r\n        if (list !== undefined) {\r\n            let items = []\r\n            list.forEach((item,i) => {\r\n                items[i] = {\r\n                    name: item\r\n                }\r\n            })\r\n            return items;\r\n        } else return false\r\n    }\r\n\r\n    selectItem(value) {\r\n        \r\n        let inputValue = this.state.inputValue\r\n        const isRepeat = inputValue.indexOf(value) !== -1\r\n        switch (this.props.multiple) {\r\n            case true:\r\n                inputValue = isRepeat ? \r\n                    inputValue.replace(` ${value},`,'')\r\n                        :\r\n                    `${this.state.inputValue} ${value},`\r\n                this.setState({ \r\n                    inputValue: inputValue,\r\n                    inputIsEmpty: false\r\n                })\r\n                break;\r\n            default:\r\n                inputValue = isRepeat ?\r\n                    '' : value\r\n                this.setState({ \r\n                    inputValue,\r\n                    inputIsEmpty: false\r\n                })\r\n                break;\r\n        }\r\n    }\r\n\r\n    clearInput() {\r\n        this.setState(() => ({\r\n            inputValue: '',\r\n            inputIsEmpty: true\r\n        }))\r\n    }\r\n\r\n    showList() {\r\n        this.setState(state => ({\r\n            isActive: !state.isActive\r\n        }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('click', this.handleClickOutside, true);\r\n        const listItems = this.listToObject();\r\n        if (this.props.url !== undefined) {\r\n            fetch(this.props.url)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    const {items} = data\r\n                    this.setState({\r\n                        items,\r\n                        isLoaded: true\r\n                    })\r\n                })\r\n        } else if (listItems) {\r\n            this.setState({items: listItems, isLoaded: true})\r\n        } else if (this.props.items !== undefined) {\r\n            this.setState({items: this.props.items, isLoaded: true})\r\n        } else console.log('Данные не получены!');\r\n        \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleClickOutside, true);\r\n    }\r\n\r\n    handleClickOutside = event => {\r\n        const domNode = ReactDOM.findDOMNode(this);\r\n\r\n        if (!domNode || !domNode.contains(event.target)) {\r\n            this.setState({\r\n                isActive: false\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default Select","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport Select from './components/select/select.jsx'\r\nimport {items} from './countries.json'\r\n\r\nrender(\r\n    <div className=\"wrapper\">\r\n        <p>На входе поступает массив строк с вариантами выбора:</p>\r\n        <Select \r\n            placeholder='Имя'\r\n            list={['Ваня','Петя','Саша','Андрей']}\r\n            />\r\n        <p>Исходные данные получены путем импорта JSON объекта, включен мультивыбор</p>\r\n        <Select \r\n            placeholder={'Страна'}\r\n            multiple\r\n            items={items}\r\n            />\r\n        <p>Список получен по URL адресу с помощью .fetch()</p>\r\n        <Select \r\n            placeholder='Операционная система'\r\n            url={`${process.env.PUBLIC_URL}/json/os.json`}\r\n            isFiltered\r\n            />\r\n    </div>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}